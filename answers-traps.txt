1. 函数参数保存在寄存器 a0 到 a7 中。在 main 对 printf 的调用中，13 保存在寄存器 a2。
2. main 中没有显式调用 f 或 g 的汇编指令。编译器将 f 和 g 内联，f(8) + 1 被预计算为 12。
3. printf 函数位于地址 0x630。
4. 在 main 中 printf 的 jalr 之后，寄存器 ra 的值是 0x38，即下一条指令的地址。
5. 运行代码 unsigned int i = 0x00646c72; printf("H%x Wo%s", 57616, &i); 输出是 "H0xe110 World"。
   这是因为 RISC-V 是小端存储，0x00646c72 存储为 72 6c 64 00，对应字符串 "rld"，与 "Wo" 拼接为 "World"。
6. 如果 RISC-V 是大端存储，为得到相同输出，i 应设置为 0x726c6400。不需要更改 57616，因为 %x 与字节序无关。
7. 在 printf("x=%d y=%d", 3) 中，"y=" 之后将打印栈上的随机值。因为格式字符串期望两个参数，但只提供了一个，第二个参数未定义。
